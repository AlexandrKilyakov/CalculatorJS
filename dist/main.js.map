{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA,QAAQ,OAAO;AACf,QAAQ,SAAS;AACjB;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,iBAAiB,mBAAmB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA,sBAAsB,aAAa,GAAG,aAAa;AACnD;AACA,KAAK;AACL,sBAAsB,aAAa;AACnC;AACA,KAAK;AACL,kBAAkB,UAAU,EAAE,aAAa;AAC3C;AACA,KAAK;AACL,kBAAkB,UAAU,EAAE,aAAa;AAC3C;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF,CAAC;;;;;;;;;;;;;;;;AC5L+C;AAChD;AACe;AACf;AACA,gBAAgB,qDAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA,2BAA2B,OAAO;AAClC;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,oBAAoB,sDAAQ;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,aAAa;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,sDAAQ;AACtB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;AACH;;;;;;UCpEA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;ACNgG;AAC/C;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,kEAAkE,iDAAiD;AACnH,mEAAmE,iDAAiD;AACpH,mEAAmE,iDAAiD;AACpH,iEAAiE,iDAAiD;AAClH,kEAAkE,iDAAiD;AACnH,kEAAkE,iDAAiD;AACnH,mEAAmE,iDAAiD;AACpH,iEAAiE,iDAAiD;AAClH,iEAAiE,iDAAiD;AAClH,uEAAuE,kDAAkD;AACzH,kEAAkE,iDAAiD;AACnH,kEAAkE,kDAAkD;AACpH;AACA;AACA,yEAAyE,0CAA0C,sDAAQ,iDAAiD;AAC5K,sEAAsE,0CAA0C,sDAAQ,iDAAiD;AACzK,sEAAsE,0CAA0C,sDAAQ,iDAAiD;AACzK,mEAAmE,0CAA0C,sDAAQ,iDAAiD;AACtK,kEAAkE,0CAA0C,sDAAQ,iDAAiD;AACrK,mEAAmE,0CAA0C,uDAAS,iDAAiD;AACvK;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,8GAA8G,sDAAQ;AACtH,sEAAsE,sDAAQ;AAC9E,sEAAsE,sDAAQ;AAC9E,0FAA0F,uDAAS;AACnG,gCAAgC,6DAAe;AAC/C,CAAC;AACD;AACA;AACA,4DAA4D,yDAAe","sources":["webpack://TEST/./src/function.js","webpack://TEST/./src/main_function.js","webpack://TEST/webpack/bootstrap","webpack://TEST/webpack/runtime/define property getters","webpack://TEST/webpack/runtime/hasOwnProperty shorthand","webpack://TEST/webpack/runtime/make namespace object","webpack://TEST/./src/index.js"],"sourcesContent":["/*------------------------------------\r\n\t\tГЛОБАЛЬНЫЕ ПЕРЕМЕННЫЕ\r\n------------------------------------*/\r\nconst arr = ['+', '-', '×', '÷', '%'];\r\nconst { chai } = window;\r\nconst { expect } = chai;\r\n/*------------------------------------\r\n\t\tГЛОБАЛЬНЫЕ ФУНКЦИИ\r\n------------------------------------*/\r\n// Функция, которая позволяет выводить математические символы без ошибок (в одном экземпляре)\r\nexport function only_one(text, sign) {\r\n\tif (text === '' || (text === '-' && text.length === 1)) return '-';\r\n\tif (arr.includes(text.slice(-1))) return text.substring(0, text.length - 1) + sign;\r\n\treturn text + sign;\r\n}\r\n\r\n// Функция для вывода только одной точки\r\nexport function comma_one(text, sign) {\r\n\tif (text.slice(-1) === '.') return text.substring(0, text.length - 1) + sign;\r\n\treturn text + sign;\r\n}\r\n\r\n// Функция, которая выполняет стандартные математические операции\r\nexport function basic_solutions(a, b, sign) {\r\n\tswitch (sign) {\r\n\tcase '×': return +(a * b).toFixed(3);\r\n\tcase '÷': return +(a / b).toFixed(3);\r\n\tcase '+': return +(a + b).toFixed(3);\r\n\tcase '-': return +(a - b).toFixed(3);\r\n\tcase '%': return +(a % b).toFixed(3);\r\n\tdefault: break;\r\n\t}\r\n}\r\n\r\n// Функция приоритетов\r\nexport function priority(array, sign) {\r\n\tlet id = array.indexOf(sign);\r\n\twhile (id !== -1) {\r\n\t\tid = array.indexOf(sign);\r\n\t\tif (id === -1) break;\r\n\t\tif (id + 1 <= array.length) {\r\n\t\t\tarray[id - 1] = basic_solutions(parseFloat(array[id - 1]), parseFloat(array[id + 1]), sign);\r\n\t\t\tarray.splice(id, 2);\r\n\t\t} else return '';\r\n\t}\r\n\r\n\treturn array;\r\n}\r\n\r\n// Функция решения\r\nexport function solution(array) {\r\n\tif (array.includes('÷')) array = priority(array, '÷');\r\n\tif (array.includes('%')) array = priority(array, '%');\r\n\tif (array.includes('×')) array = priority(array, '×');\r\n\tif (array.includes('+')) array = priority(array, '+');\r\n\tif (array.includes('-')) array = priority(array, '-');\r\n\treturn array;\r\n}\r\n\r\n// Функция, которая делает массив более удобным\r\nexport function arrange(text) {\r\n\tlet array = new Array();\r\n\tconst result = text.split('');\r\n\tlet temp = '';\r\n\r\n\tfor (let i = 0; i < result.length; i++) {\r\n\t\tif (!isNaN(result[i])) temp += result[i];\r\n\t\telse {\r\n\t\t\tarray.push(temp);\r\n\t\t\tarray.push(result[i]);\r\n\t\t\ttemp = '';\r\n\t\t}\r\n\t}\r\n\r\n\tif (temp !== '') array.push(temp);\r\n\r\n\tarray = array.filter((n) => n);\r\n\r\n\tfor (let i = 0; i < array.length; i++) {\r\n\t\tif (array[i] == '.') {\r\n\t\t\tif (!isNaN(array[i - 1]) && !isNaN(array[i + 1])) {\r\n\t\t\t\tarray[i - 1] = `${array[i - 1]}.${array[i + 1]}`;\r\n\t\t\t\tarray.splice(i, 2);\r\n\t\t\t} else if (!isNaN(array[i - 1]) && isNaN(array[i + 1])) {\r\n\t\t\t\tarray[i - 1] = `${array[i - 1]}.` + '0';\r\n\t\t\t\tarray.splice(i, 1);\r\n\t\t\t} else if (i == 0 && !isNaN(array[i + 1])) {\r\n\t\t\t\tarray[0] = `${'0' + '.'}${array[i + 1]}`;\r\n\t\t\t\tarray.splice(i + 1, 1);\r\n\t\t\t} else if (isNaN(array[i - 1]) && !isNaN(array[i + 1])) {\r\n\t\t\t\tarray[i] = `${'0' + '.'}${array[i + 1]}`;\r\n\t\t\t\tarray.splice(i + 1, 1);\r\n\t\t\t} else {\r\n\t\t\t\tarray[i] = '0';\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfor (let i = 0; i < array.length; i++) {\r\n\t\tif (array[i] == '-' && i == 0) {\r\n\t\t\tif (!isNaN(array[i + 1])) {\r\n\t\t\t\tarray[i + 1] = 0 - parseFloat(array[i + 1]);\r\n\t\t\t\tarray.splice(i, 1);\r\n\t\t\t}\r\n\t\t} else if (array[i] == '-' && isNaN(array[i - 1]) && array[i - 1] != ')') {\r\n\t\t\tif (!isNaN(array[i + 1])) {\r\n\t\t\t\tarray[i + 1] = 0 - parseFloat(array[i + 1]);\r\n\t\t\t\tarray.splice(i, 1);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn array;\r\n}\r\n\r\n/*------------------------------------\r\n\t\t\tТЕСТЫ\r\n------------------------------------*/\r\n\r\ndescribe('basic_solutions', () => {\r\n\t// Тест должен выполнить стандартные математические функции\r\n\tit('Тест должен выполнить стандартные математические функции - 1', () => {\r\n\t\t// Умножение\r\n\t\texpect(basic_solutions(2, 5, '×')).to.deep.equal(10);\r\n\t\texpect(basic_solutions(22, 15, '×')).to.deep.equal(330);\r\n\t\texpect(basic_solutions(56, -5, '×')).to.deep.equal(-280);\r\n\t\texpect(basic_solutions(23, 105, '×')).to.deep.equal(2415);\r\n\t\texpect(basic_solutions(11, 55, '×')).to.deep.equal(605);\r\n\t\texpect(basic_solutions(112, 7, '×')).to.deep.equal(784);\r\n\t\texpect(basic_solutions(49, 101, '×')).to.deep.equal(4949);\r\n\r\n\t\t// Деление\r\n\t\texpect(basic_solutions(22, 11, '÷')).to.deep.equal(2);\r\n\t\texpect(basic_solutions(57, 23, '÷')).to.deep.equal(2.478);\r\n\t\texpect(basic_solutions(12, 1, '÷')).to.deep.equal(12);\r\n\t\texpect(basic_solutions(123.3, 41.3, '÷')).to.deep.equal(2.985);\r\n\t\texpect(basic_solutions(159, 32, '÷')).to.deep.equal(4.969);\r\n\t\texpect(basic_solutions(-57, 11, '÷')).to.deep.equal(-5.182);\r\n\t\texpect(basic_solutions(-22, -13, '÷')).to.deep.equal(1.692);\r\n\r\n\t\t// Сложение\r\n\t\texpect(basic_solutions(2, 5, '+')).to.deep.equal(7);\r\n\t\texpect(basic_solutions(-2, 5, '+')).to.deep.equal(3);\r\n\t\texpect(basic_solutions(2, -5, '+')).to.deep.equal(-3);\r\n\t\texpect(basic_solutions(-2, -5, '+')).to.deep.equal(-7);\r\n\t\texpect(basic_solutions(225, 485, '+')).to.deep.equal(710);\r\n\t\texpect(basic_solutions(225.3, 485.03, '+')).to.deep.equal(710.33);\r\n\t\texpect(basic_solutions(225.02, -485.01, '+')).to.deep.equal(-259.99);\r\n\r\n\t\t// Вычитание\r\n\t\texpect(basic_solutions(123, 23, '-')).to.deep.equal(100);\r\n\t\texpect(basic_solutions(12.3, 23, '-')).to.deep.equal(-10.7);\r\n\t\texpect(basic_solutions(-123, 23, '-')).to.deep.equal(-146);\r\n\t\texpect(basic_solutions(123, -23, '-')).to.deep.equal(146);\r\n\t\texpect(basic_solutions(-123, -23, '-')).to.deep.equal(-100);\r\n\t\texpect(basic_solutions(-123.003, 23.2, '-')).to.deep.equal(-146.203);\r\n\r\n\t\t// Взятия остатка\r\n\t\texpect(basic_solutions(123, 23, '%')).to.deep.equal(8);\r\n\t\texpect(basic_solutions(123, 2, '%')).to.deep.equal(1);\r\n\t\texpect(basic_solutions(123, 3, '%')).to.deep.equal(0);\r\n\t});\r\n\r\n\t// Функция делает из строки удобный массив\r\n\tit('Тест должен выполнить стандартные математические функции - 2', () => {\r\n\t\texpect(arrange('2+5')).to.deep.equal(['2', '+', '5']);\r\n\t\texpect(arrange('5+95×7-3')).to.deep.equal(['5', '+', '95', '×', '7', '-', '3']);\r\n\t\texpect(arrange('5×√(6+3)-9')).to.deep.equal(['5', '×', '√', '(', '6', '+', '3', ')', '-', '9']);\r\n\t\texpect(arrange('6%2×9-33+458-(45×√(9))')).to.deep.equal(['6', '%', '2', '×', '9', '-', '33', '+', '458', '-', '(', '45', '×', '√', '(', '9', ')', ')']);\r\n\t});\r\n\r\n\t// Функция делает из строки удобный массив\r\n\tit('Тест должен выполнить стандартные математические функции - 3', () => {\r\n\t\texpect(priority(['5', '+', '6', '-', '33'], '+')).to.deep.equal([11, '-', '33']);\r\n\t\texpect(priority([11, '-', '33'], '-')).to.deep.equal([-22]);\r\n\t\texpect(priority([-3, '+', '4'], '+')).to.deep.equal([1]);\r\n\t\texpect(priority(['9', '+', 1], '+')).to.deep.equal([10]);\r\n\t\texpect(priority([-34, '+', '9', '×', 2], '×')).to.deep.equal([-34, '+', 18]);\r\n\t\texpect(priority([-34, '+', 18], '+')).to.deep.equal([-16]);\r\n\t});\r\n\r\n\t// Функция выполняет стандартные математические решения\r\n\tit('Тест должен выполнить стандартные математические функции - 4', () => {\r\n\t\texpect(solution(['5', '+', '9', '-', '3', '×', '8'])).to.deep.equal([-10]);\r\n\t\texpect(solution(['88', '-', '9', '×', 3])).to.deep.equal([61]);\r\n\t\texpect(solution(['61', '+', '3', '-', '8', '÷', '2', '%', '3'])).to.deep.equal([63]);\r\n\t\texpect(solution(['56', '×', '8'])).to.deep.equal([448]);\r\n\t\texpect(solution(['5', '-', '6', '×', '3', '+', 21.166010488516726])).to.deep.equal([-34.166]);\r\n\t});\r\n});\r\n","import {solution, arrange} from './function.js';\r\n// Основная функция\r\nexport default function find_a_solution() {\r\n\tconst text = document.querySelector('#result').value;\r\n\tlet arr_text = arrange(text);\r\n\tconst n = arr_text.length;\r\n\tlet temp = '';\r\n\r\n\tif (text.length > 2 && (text.includes('-') || text.includes('+') || text.includes('×') || text.includes('÷') || text.includes('%') || text.includes('('))) {\r\n\t\tlet temp_array = new Array();\r\n\r\n\t\tif (arr_text.includes('(') || arr_text.includes(')')) {\r\n\t\t\tlet counter = 0;\r\n\t\t\tlet border = 0;\r\n\t\t\tlet id = 0;\r\n\t\t\tlet number_of_open_brackets = text.split('(').length - 1;\r\n\r\n\t\t\tif (number_of_open_brackets == text.split(')').length - 1) {\r\n\t\t\t\tfor (let i = 0; i < n; i++) {\r\n\t\t\t\t\tif (arr_text[i] == '(') {\r\n\t\t\t\t\t\tcounter++;\r\n\t\t\t\t\t\tif (counter == number_of_open_brackets) {\r\n\t\t\t\t\t\t\tfor (let j = i + 1; j < n; j++) {\r\n\t\t\t\t\t\t\t\tif (arr_text[j] == ')') {\r\n\t\t\t\t\t\t\t\t\tcounter = 0;\r\n\t\t\t\t\t\t\t\t\tnumber_of_open_brackets--;\r\n\t\t\t\t\t\t\t\t\tborder = j;\r\n\t\t\t\t\t\t\t\t\tj = n;\r\n\t\t\t\t\t\t\t\t} else temp_array.push(arr_text[j]);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\ttemp_array = solution(temp_array);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (border > 0) {\r\n\t\t\t\t\t\t\ttemp = (arr_text[i - 1] == '√') ? Math.sqrt(temp_array[0]) : parseFloat(temp_array);\r\n\r\n\t\t\t\t\t\t\tid = (arr_text[i - 1] == '√') ? i - 1 : i;\r\n\r\n\t\t\t\t\t\t\tarr_text[id] = temp;\r\n\t\t\t\t\t\t\tfor (let j = id + 1; border > id; border--) arr_text.splice(j, 1);\r\n\t\t\t\t\t\t\tborder = 0;\r\n\t\t\t\t\t\t\ti = -1;\r\n\t\t\t\t\t\t\ttemp_array = [];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (number_of_open_brackets == 0) i = n;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tdocument.querySelector('#text').value = 'Не хватает скобок!';\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\tarr_text = solution(arr_text);\r\n\r\n\t\t\tif (arr_text.length > 1 || isNaN(arr_text[0])) {\r\n\t\t\t\tdocument.querySelector('#text').value = 'Ошибка!';\r\n\t\t\t\tdocument.querySelector('#result').value = '';\r\n\t\t\t} else {\r\n\t\t\t\tdocument.querySelector('#text').value = document.querySelector('#result').value;\r\n\t\t\t\tdocument.querySelector('#result').value = arr_text[0];\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tdocument.querySelector('#text').value = 'Не правильно записано уравнение!';\r\n\t\t\tdocument.querySelector('#result').value = '';\r\n\t\t}\r\n\t} else document.querySelector('#result').value = text;\r\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import {only_one, comma_one, basic_solutions, priority, solution, arrange} from './function.js';\r\nimport find_a_solution from './main_function.js';\r\n/*------------------------------------\r\n\t\tРАБОТА С КНОПКАМИ\r\n------------------------------------*/\r\n\r\n// Кнопка, которая очищает всё\r\ndocument.querySelector('#clean').addEventListener('click', () => {\r\n\tdocument.querySelector('#result').value = '';\r\n\tdocument.querySelector('#text').value = '';\r\n});\r\n\r\n// Кнопка, для ввода чисел\r\ndocument.querySelector('#nine').addEventListener('click', () => { document.querySelector('#result').value += '9'; });\r\ndocument.querySelector('#eight').addEventListener('click', () => { document.querySelector('#result').value += '8'; });\r\ndocument.querySelector('#seven').addEventListener('click', () => { document.querySelector('#result').value += '7'; });\r\ndocument.querySelector('#six').addEventListener('click', () => { document.querySelector('#result').value += '6'; });\r\ndocument.querySelector('#five').addEventListener('click', () => { document.querySelector('#result').value += '5'; });\r\ndocument.querySelector('#four').addEventListener('click', () => { document.querySelector('#result').value += '4'; });\r\ndocument.querySelector('#three').addEventListener('click', () => { document.querySelector('#result').value += '3'; });\r\ndocument.querySelector('#two').addEventListener('click', () => { document.querySelector('#result').value += '2'; });\r\ndocument.querySelector('#one').addEventListener('click', () => { document.querySelector('#result').value += '1'; });\r\ndocument.querySelector('#two-zeros').addEventListener('click', () => { document.querySelector('#result').value += '00'; });\r\ndocument.querySelector('#zero').addEventListener('click', () => { document.querySelector('#result').value += '0'; });\r\ndocument.querySelector('#root').addEventListener('click', () => { document.querySelector('#result').value += '√('; });\r\n\r\n// Кнопки, для ввода математических символов\r\ndocument.querySelector('#percentages').addEventListener('click', () => { document.querySelector('#result').value = only_one(document.querySelector('#result').value, '%'); });\r\ndocument.querySelector('#division').addEventListener('click', () => { document.querySelector('#result').value = only_one(document.querySelector('#result').value, '÷'); });\r\ndocument.querySelector('#multiply').addEventListener('click', () => { document.querySelector('#result').value = only_one(document.querySelector('#result').value, '×'); });\r\ndocument.querySelector('#minus').addEventListener('click', () => { document.querySelector('#result').value = only_one(document.querySelector('#result').value, '-'); });\r\ndocument.querySelector('#plus').addEventListener('click', () => { document.querySelector('#result').value = only_one(document.querySelector('#result').value, '+'); });\r\ndocument.querySelector('#comma').addEventListener('click', () => { document.querySelector('#result').value = comma_one(document.querySelector('#result').value, '.'); });\r\n\r\n// События на клавиатуру\r\ndocument.addEventListener('keydown', (event) => {\r\n\tif (event.keyCode == 8) {\r\n\t\tconst text = document.querySelector('#result').value;\r\n\t\tdocument.querySelector('#result').value = text.substring(0, text.length - 1);\r\n\t} else if (event.key == '(' || event.key == ')') document.querySelector('#result').value += event.key;\r\n\telse if (event.key >= 0 && event.key <= 9) document.querySelector('#result').value += event.key;\r\n\telse if (event.key == '%' || event.key == '+' || event.key == '-') document.querySelector('#result').value = only_one(document.querySelector('#result').value, event.key);\r\n\telse if (event.key == '*') document.querySelector('#result').value = only_one(document.querySelector('#result').value, '×');\r\n\telse if (event.key == '/') document.querySelector('#result').value = only_one(document.querySelector('#result').value, '÷');\r\n\telse if (event.key == '.' || event.key == ',') document.querySelector('#result').value = comma_one(document.querySelector('#result').value, '.');\r\n\telse if (event.keyCode === 13) find_a_solution();\r\n});\r\n\r\n// Вывод результата\r\ndocument.querySelector('#answer').addEventListener('click', find_a_solution);\r\n"],"names":[],"sourceRoot":""}